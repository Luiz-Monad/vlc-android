apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    namespace 'org.videolan.resources'
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    buildFeatures {
        buildConfig = true
    }

    packagingOptions {
        jniLibs {
            pickFirsts += ['**/*.so']
        }
    }

    defaultConfig {
        compileSdkVersion rootProject.ext.compileSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        minSdkVersion rootProject.ext.minSdkVersion

        vectorDrawables.useSupportLibrary = true

        consumerProguardFiles 'consumer-rules.pro'
        multiDexEnabled true

        buildConfigField "String", "APP_ID", "\"${rootProject.ext.appId}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
            buildConfigField "String", "APP_ID", "\"${rootProject.ext.appId}.debug\""
        }
        dev {
            initWith debug
            matchingFallbacks = ['debug']
        }
        noTv {
            initWith release
            matchingFallbacks = ['release']
        }
        vlcBundle {
            initWith release
            matchingFallbacks = ['release']
        }
    }

    sourceSets.debug {
        res.srcDirs = ['flavors/debug/res']
    }
    sourceSets.dev {
        res.srcDirs = ['flavors/debug/res']
    }
}

dependencies {
    api project(':application:tools')
    api project(':libvlcjni:libvlc')
    api project(':medialibrary')
//    debugApi "org.videolan.android:libvlc-all:$rootProject.ext.libvlcVersion"
//    debugApi "org.videolan.android:medialibrary-all:$rootProject.ext.mediaLibVersion"
//    devApi project(':libvlcjni:libvlc')
//    devApi project(':medialibrary')
//    noTvApi "org.videolan.android:libvlc-all:$rootProject.ext.libvlcVersion"
//    noTvApi "org.videolan.android:medialibrary-all:$rootProject.ext.mediaLibVersion"
//    releaseApi "org.videolan.android:libvlc-all:$rootProject.ext.libvlcVersion"
//    releaseApi "org.videolan.android:medialibrary-all:$rootProject.ext.mediaLibVersion"
//    vlcBundleApi "org.videolan.android:libvlc-all:$rootProject.ext.libvlcVersion"
//    vlcBundleApi "org.videolan.android:medialibrary-all:$rootProject.ext.mediaLibVersion"

    api "androidx.core:core-ktx:$rootProject.ext.androidxCoreVersion"
    api "androidx.leanback:leanback-preference:$rootProject.ext.androidxLeanbackVersion"
    api "androidx.leanback:leanback:$rootProject.ext.androidxLeanbackVersion"
    api "androidx.multidex:multidex:$rootProject.ext.androidxMultidexVersion"
    api "androidx.preference:preference-ktx:$rootProject.ext.androidxPreferencesVersion"
    api "com.google.android.material:material:$rootProject.ext.androidxMaterialVersion"
    api "com.squareup.moshi:moshi-adapters:$rootProject.ext.moshiVersion"
    api "com.squareup.retrofit2:converter-moshi:$rootProject.ext.retrofitVersion"
    api "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.kotlinx_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.kotlinx_version"
    testImplementation "androidx.test:core:$rootProject.ext.testCoreVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.junitExtVersion"
}
